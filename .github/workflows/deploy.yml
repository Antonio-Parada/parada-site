name: Deploy Multi-Tenant Blogging Platform

on:
  push:
    branches:
      - main
    paths:
      - 'sites/**'
      - 'content-platform/**'
      - 'themes/**'
      - 'static/**'
      - 'layouts/**'
      - 'hugo.toml'
      - 'config.*'
      - 'CNAME'
      - '.github/workflows/**'
  pull_request:
    branches:
      - main
    paths:
      - 'sites/**'
      - 'content-platform/**'
      - 'static/**'
      - 'layouts/**'
      - 'hugo.toml'
      - 'config.*'
  workflow_dispatch:
    inputs:
      tenant:
        description: 'Specific tenant to deploy (leave empty for all)'
        required: false
        type: string
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: Build Platform Site
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          # Build main platform site (platform content only)
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}"
          
          # Build all user blogs
          for user_dir in sites/*/; do
            if [ -d "$user_dir" ]; then
              username=$(basename "$user_dir")
              echo "Building blog for user: $username"
              
              cd "$user_dir"
              if [ -f "hugo.toml" ] || [ -f "config.toml" ] || [ -f "config.yaml" ] || [ -f "config.yml" ]; then
                hugo \
                  --gc \
                  --minify \
                  --destination "../../public/$username" \
                  --baseURL "https://blog.mypp.site/$username/"
                echo "✅ Built blog for: $username"
              else
                echo "⚠️  No Hugo config found for: $username"
              fi
              cd ../..
            fi
          done
          
          # Create CNAME file for custom domain
          echo "blog.mypp.site" > public/CNAME
          
          # Create index file listing all blogs if needed
          echo "Built sites: $(ls -1 public/ | grep -v CNAME | tr '\n' ' ')"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
